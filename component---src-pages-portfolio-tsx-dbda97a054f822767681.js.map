{"version":3,"file":"component---src-pages-portfolio-tsx-dbda97a054f822767681.js","mappings":"+VA6CA,EA7BqE,SAAC,GAS/D,IARLA,EAQI,EARJA,MACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,IACAC,EAKI,EALJA,MACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,SACGC,GACC,YACEC,GAAoBC,EAAAA,EAAAA,MAS1B,OARAC,EAAAA,EAAAA,YAAU,WACRF,EAAkB,CAChBG,KAAM,mBACNC,QAASP,IAEXG,EAAkB,CAAEG,KAAM,oBAAqBC,QAASR,MACvD,CAACA,KAGF,QAACS,EAAA,GAAD,QAAUb,MAAOA,EAAOC,YAAaA,EAAaC,IAAKA,EAAKC,MAAOA,GAAWI,IAC5E,QAAC,KAAD,OACA,QAAC,KAAD,OACA,QAAC,KAAD,KAAgBD,IAChB,QAAC,KAAD,Q,+BCwBN,EAhC6D,YAA+B,IAAnBQ,EAAkB,EAAlBA,KAASP,GAAS,YAEvFQ,EAKED,EALFC,KACAC,EAIEF,EAJFE,WACAC,EAGEH,EAHFG,QACAC,EAEEJ,EAFFI,YACqBC,EACnBL,EADFM,kBAAqBD,MAEvB,EAA4DJ,EAAKM,aAAzDC,EAAR,EAAQA,gBAAiBrB,EAAzB,EAAyBA,YAAasB,EAAtC,EAAsCA,kBAChCC,EAAgBR,EAAWS,UAEjC,OACE,QAACC,EAAA,GAAD,CAAgBC,aAAW,IACzB,QAAC,IAAD,CAAeC,MAAOA,EAAAA,KACpB,QAACC,EAAA,GAAD,MACE,QAAC,GAAD,UACMtB,EADN,CAEEF,WAAY,CAACY,QAAAA,EAASC,YAAAA,GACtBd,aAAce,EACdnB,MAAOsB,EACPrB,YAAaA,EACbC,IAAKqB,EACLpB,MAAOqB,KAEP,QAAC,IAAD","sources":["webpack://gatsby-starter-default/./src/templates/PortfolioTemplate.tsx","webpack://gatsby-starter-default/./src/pages/portfolio.tsx"],"sourcesContent":["import { FunctionComponent, useEffect } from 'react';\n\nimport Template, { TemplateProps } from './Template';\nimport { Header, Footer, MainContainer, GlobalStyle } from 'components/portfolio/Common';\n\nimport { usePortfolioDispatch } from 'utils/contexts/PortfolioContext';\nimport { PortfolioImage, PortfolioMarkdownData } from 'utils/types';\n\ntype PortfolioTemplateProps = TemplateProps & {\n  markdownData: PortfolioMarkdownData[];\n  waveImages: {\n    waveImg: PortfolioImage | null;\n    waveBackImg: PortfolioImage | null;\n  };\n};\n\nconst PortfolioTemplate: FunctionComponent<PortfolioTemplateProps> = ({\n  title,\n  description,\n  url,\n  image,\n  markdownData,\n  waveImages,\n  children,\n  ...props\n}) => {\n  const portfolioDispatch = usePortfolioDispatch();\n  useEffect(() => {\n    portfolioDispatch({\n      type: 'SET_WAVE_IMG_URL',\n      payload: waveImages,\n    });\n    portfolioDispatch({ type: 'SET_MARKDOWN_DATA', payload: markdownData });\n  }, [markdownData]);\n\n  return (\n    <Template title={title} description={description} url={url} image={image} {...props}>\n      <GlobalStyle />\n      <Header />\n      <MainContainer>{children}</MainContainer>\n      <Footer />\n    </Template>\n  );\n};\n\nexport default PortfolioTemplate;\n","import { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { ThemeProvider } from '@emotion/react';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { PortfolioContextProvider } from 'utils/contexts/PortfolioContext';\n\nimport PortfolioTemplate from 'templates/PortfolioTemplate';\nimport { PortfolioComposition } from 'compositions';\n\nimport { PortfolioImage, PortfolioMarkdownData } from 'utils/types';\nimport { theme } from 'utils/style';\n\ntype PortfolioPageProps = {\n  data: {\n    allMarkdownRemark: {\n      edges: PortfolioMarkdownData[];\n    };\n    site: {\n      siteMetadata: {\n        title_portfolio: string;\n        description: string;\n        siteUrl_portfolio: string;\n      };\n    };\n    profileImg: {\n      publicURL: string;\n    };\n    waveImg: PortfolioImage;\n    waveBackImg: PortfolioImage;\n  };\n};\n\nconst PortfolioPage: FunctionComponent<PortfolioPageProps> = function ({ data, ...props }) {\n  const {\n    site,\n    profileImg,\n    waveImg,\n    waveBackImg,\n    allMarkdownRemark: { edges },\n  } = data;\n  const { title_portfolio, description, siteUrl_portfolio } = site.siteMetadata;\n  const profileImgUrl = profileImg.publicURL;\n\n  return (\n    <StylesProvider injectFirst>\n      <ThemeProvider theme={theme}>\n        <PortfolioContextProvider>\n          <PortfolioTemplate\n            {...props}\n            waveImages={{waveImg, waveBackImg}}\n            markdownData={edges}\n            title={title_portfolio}\n            description={description}\n            url={siteUrl_portfolio}\n            image={profileImgUrl}\n          >\n            <PortfolioComposition />\n          </PortfolioTemplate>\n        </PortfolioContextProvider>\n      </ThemeProvider>\n    </StylesProvider>\n  );\n};\n\nexport default PortfolioPage;\n\nexport const getPortpolioData = graphql`\n  query getPortpolioData {\n    allMarkdownRemark(\n      filter: { frontmatter: { options: { isPortfolio: { eq: true } } } }\n      sort: { order: DESC, fields: frontmatter___portfolioInfo___duration___startDate }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            portfolioInfo {\n              sectionType\n              title\n              subTitle\n              duration {\n                startDate\n                endDate\n              }\n              memberInfo\n              skills\n              links {\n                name\n                href\n              }\n              images {\n                childImageSharp {\n                  gatsbyImageData\n                }\n                publicURL\n              }\n              type\n            }\n          }\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title_portfolio\n        description\n        siteUrl_portfolio\n      }\n    }\n    profileImg: file(name: { eq: \"profile-image\" }) {\n      publicURL\n    }\n    waveImg: file(name: { eq: \"wave\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n      publicURL\n    }\n    waveBackImg: file(name: { eq: \"wave_background\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["title","description","url","image","markdownData","waveImages","children","props","portfolioDispatch","usePortfolioDispatch","useEffect","type","payload","Template","data","site","profileImg","waveImg","waveBackImg","edges","allMarkdownRemark","siteMetadata","title_portfolio","siteUrl_portfolio","profileImgUrl","publicURL","StylesProvider","injectFirst","theme","PortfolioContext"],"sourceRoot":""}