{"version":3,"file":"02d465c2-7335ed9705a3b4d174dc.js","mappings":"oLAAqC,IAsExBA,EAAmB,SAAH,GAAuF,IAAjFC,EAAS,EAATA,UAAWC,EAAc,EAAdA,eAAgBC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAGvEC,EAFsCJ,EAApCK,SAEyB,KAFWL,EAA1BM,eAEkC,IAFRN,EAAVO,MAE2B,MAD1C,SAAyB,SAAdR,EAAuB,OAAS,UAG9D,OAAOS,EAAAA,EAAAA,IAAG,aACKJ,EAAa,+CAEfH,EAAM,YACNC,EAAO,WACLC,EAAM,6BAEgB,SAAdJ,EAAuB,OAAS,SAAO,2DAK5B,KAAsB,SAAdA,GAAwB,EAAI,GAAE,oBAI1E,C","sources":["webpack://gatsby-starter-default/./src/utils/style/animation.ts"],"sourcesContent":["import { css } from '@emotion/react';\n\ntype SetSlideAnimationProps = {\n  duration?: number;\n  idx?: number;\n  direction: 'left' | 'right';\n  isMarginAuto?: boolean;\n};\nexport const setSlideAnimation = ({ duration = 0.8, idx, direction, isMarginAuto }: SetSlideAnimationProps) => css`\n  /* margin-right: auto; */\n  @keyframes ${`slide-${direction === 'left' ? 'left' : 'right'}`} {\n    from {\n      ${direction === 'left' ? css`left: 100%;` : css`right: 100%;`};\n      opacity: 0;\n    }\n    to {\n      ${direction === 'left' ? css`left: 0%;` : css`right: 0%;`};\n      opacity: 1;\n    }\n  }\n\n  animation: ${`${idx && idx >= 0 ? (idx + 1) * duration : duration}s slide-${\n    direction === 'left' ? 'left' : 'right'\n  }`};\n  ${isMarginAuto && direction === 'left' ? css` margin-left: auto; ` : css` margin-right: auto; `}\n`;\n\ntype SetFadeAnimationProps = {\n  duration?: number;\n  idx?: number;\n  type?: 'fadeIn' | 'fadeOut';\n  isBlink?: boolean;\n  opacityOptions?: {\n    from: number;\n    to: number;\n  };\n};\nexport const setFadeAnimation = (\n  { idx, duration = 2, type = 'fadeIn', isBlink, opacityOptions }: SetFadeAnimationProps = { duration: 2, type: 'fadeIn' },\n) => {\n  const strDuration = `${idx && idx >= 0 ? (idx + 1) * duration : duration}s`;\n  const strBlink = `${isBlink ? 'ease-in-out infinite alternate' : ''}`;\n  const nOpacityFrom = opacityOptions?.from ?? (type === 'fadeIn' ? 0 : 1);\n  const nOpacityTo = opacityOptions?.to ?? (type === 'fadeIn' ? 1 : 0);\n\n  return css`\n    @keyframes fade {\n      from {\n        opacity: ${nOpacityFrom};\n      }\n      to {\n        opacity: ${nOpacityTo};\n      }\n    }\n    animation: fade ${strDuration} ${strBlink};\n  `;\n};\n\n\ntype setWaveAnimationProps = {\n  direction: \"left\" | \"right\";\n  animationProps: {\n    duration: number;\n    timingFunction: string;\n    delay: number;\n  }\n  zIndex: number;\n  opacity: number;\n  bottom: number;\n};\nexport const setWaveAnimation = ({ direction, animationProps, zIndex, opacity, bottom }: setWaveAnimationProps) => {\n  const { duration, timingFunction, delay } = animationProps;\n  const animationName = `wave-${direction === 'left' ? 'left' : 'right'}`;\n  const currAnimation = `${duration}s ${timingFunction} ${delay}s ${animationName}`;\n\n  return css`\n    animation: ${currAnimation}; /* duration | timing-function | delay | name */\n    animation-iteration-count: infinite;\n    z-index: ${zIndex};\n    opacity: ${opacity};\n    bottom: ${`${bottom}px`};\n\n    @keyframes ${`wave-${direction === 'left' ? 'left' : 'right'}`} {\n      0% {\n        background-position-x: 0;\n      }\n      100% {\n        background-position-x: ${`${1000 * (direction === 'left' ? -1 : 1)}px`}; // left는 음수\n      }\n    }\n  `;\n};\n"],"names":["setWaveAnimation","direction","animationProps","zIndex","opacity","bottom","currAnimation","duration","timingFunction","delay","css"],"sourceRoot":""}