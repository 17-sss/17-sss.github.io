{"componentChunkName":"component---src-pages-custom-post-tsx","path":"/posts/_portfolio/project-ranolog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"7e47c4a5-d2d6-57b9-ab2d-36b021611114","fields":{"slug":"/_portfolio/project-ranolog/"},"html":"<h4 class=\"bg--gray text--bold\"> 🧚🏻&nbsp;&nbsp;구현 요약</h4>\n<ul>\n<li>컴포넌트의 재사용화를 위해 커스텀 훅으로 비즈니스 로직 분리했습니다.</li>\n<li>컴포넌트 작성 시 특정 페이지에만 의존하지 않도록 <code class=\"language-text\">Storybook</code>을 활용하여 개발하였습니다.</li>\n<li><strong>디자인</strong> 및 <strong>목차(Toc)</strong> 기능 등 라이브러리를 사용하지 않고 개발하였습니다.</li>\n</ul>\n<h6 class=\"text--bold\">글 작성 편의를 위한 CLI 제작</h6>\n<ul>\n<li>현 프로젝트에서의 문서 타입은 <code class=\"language-text\">Post</code>, <code class=\"language-text\">Project</code>, <code class=\"language-text\">Resume</code>가 존재합니다. (모두 <strong>frontmatter</strong> 형태가 다릅니다)</li>\n<li>CLI를 통해 사용자가 문서 타입을 선택하고, 정보를 입력하면..<br>\n→ 이에 부합하는 <strong>frontmatter</strong> 데이터를 가진 Markdown이 생성됩니다.</li>\n</ul>\n<h4 class=\"bg--gray text--bold\">🤔&nbsp;&nbsp;고민한 점</h4>\n<p>\n  <strong>글 검색 시 많은 이벤트 호출</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">Debounce 활용하여 제어</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>블로그 글 검색 시, 사용자가 입력할 때마다 이벤트 발생</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span>입력할 때마다 이벤트가 호출되는 것이 아닌 마지막 호출에서 1초가 지난 후 함수의 기능이 동작하도록 함</span>\n    </p>\n  </li>\n</ol>\n<hr class=\"thin\" />\n<br/>\n<p>\n  <strong>부모 컴포넌트에서 자식 컴포넌트의 상태를 업데이트하려면?</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">useImperativeHandle 활용</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>부모의 상태를 업데이트할 때, 자식 컴포넌트 내부 상태도 업데이트 되어야 함.</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span class=\"bg--green text--italic\">👇 <strong>내용 참고</strong></span>\n    </p>\n    <ul class=\"pl--24 alpha\">\n      <li>\n        <span>전역 상태 관리를 통해서 문제를 해결하려 했지만, 단 하나의 자식만 업데이트되면 됨.</span><br/>\n        <span>(효율적이지 않다고 생각)</span>\n      </li>\n      <li>자식 컴포넌트에 <code class=\"language--text \">forwardRef</code> & <code class=\"language--text \">useImperativeHandle</code> 적용\n      <li>자식 컴포넌트의 <code class=\"language--text \">useImperativeHandle</code>에 컴포넌트 상태를 변경하는 함수 정의</li>\n      <li>부모 컴포넌트에서 <strong>ref</strong>를 통해 자식 컴포넌트에 정의한 함수 사용</li>\n    </ul>\n  </li>\n</ol>\n<hr class=\"thin\" />","frontmatter":{"title":"","summary":null,"date":null,"categories":null,"options":{"isPortfolio":true,"hide":true},"thumbnail":null}}}]}},"pageContext":{"slug":"/_portfolio/project-ranolog/"}},"staticQueryHashes":["1642645631","2183628444","2643874338","3590156278","3949884163","77750267","884297919"]}