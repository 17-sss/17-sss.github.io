{
    "componentChunkName": "component---src-pages-custom-post-tsx",
    "path": "/posts/_portfolio/project-portpolio/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"eae3ab31-22b1-55f0-a05b-6e92fa90374a","fields":{"slug":"/_portfolio/project-portpolio/"},"html":"<h4 class=\"bg--gray text--bold\"> 🧚🏻&nbsp;&nbsp;구현 요약</h4>\n<ul>\n<li>모든 컴포넌트, 로직들을 재사용성을 생각하여 분리하는데 초점을 두었습니다.</li>\n<li>반응형과 애니메이션을 처음으로 깊이 있게 고민하며 제작한 프로젝트입니다.</li>\n<li>Intersection Observer를 활용하여 현재 보고있는 화면이 각 요소에 접근 시 애니메이션이 실행되도록 하였습니다.</li>\n<li>Context API를 활용하여 전역 상태관리를 하였습니다.</li>\n</ul>\n<h4 class=\"bg--gray text--bold\">🤔&nbsp;&nbsp;고민한 점</h4>\n<p>\n  <strong>사용자가 보고 있는 화면이 각 요소가 있는 영역에 도달했을 때 애니메이션이 실행</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">Intersection Observer 활용</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span\n        >해당 기능을 구현하기 위해 <strong>Scroll Event</strong>를 활용에 대해 고민했지만, 많은 리소스가 소모될 것\n        같음</span\n      >\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span\n        ><strong>Intersection Observer API</strong>를 기반으로 한 커스텀 훅\n        <code class=\"language--text\">useScrollAnimations</code>를 제작\n      </span>\n    </p>\n    <hr class=\"thin\" />\n  </li>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>외부 스타일 시트의 영향을 최대한 받지 않고, 스타일이 적용되어야 함</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span>\"인라인 스타일\"에 애니메이션 관련 스타일 적용</span>\n    </p>\n    <hr class=\"thin\" />\n  </li>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>컴포넌트의 최상위 요소가 아닌 모든 <u>자식 요소</u>까지 <u>애니메이션이 적용</u>되어야 함</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span\n        ><strong>DFS</strong> 알고리즘을 활용하여 컴포넌트에서 렌더링하는 <u>모든 자식 요소</u>들을\n        <strong>Observe</strong> 하도록 개선</span\n      >\n    </p>\n    <hr class=\"thin\" />\n  </li>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>특정 자식 요소는 <strong>Observe</strong>되어서는 안됨.</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span\n        >제외 될 요소의 <strong>css selector</strong>를 <code class=\"language--text\">useScrollAnimations</code>에\n        전달하여 <strong>Observe</strong> 하지 않도록 함.</span\n      >\n    </p>\n  </li>\n</ol>\n<hr class=\"thin\" />\n<br/>\n<p>\n  <strong>생성한 컴포넌트에 Ref가 전달이 되어야 함</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">React의 forwardRef 활용</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>컴포넌트에서 렌더링하는 <u>자식 컴포넌트들</u>에 <strong>ref</strong> 프로퍼티가 전달되지 않는 문제</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span\n        >자식 <u>컴포넌트</u>에 <strong>forwardRef</strong>를 <u>적용</u>하여 자식 컴포넌트를 렌더링하는 컴포넌트에서\n        <strong>ref</strong> 참조할 수 있도록 함</span\n      >\n    </p>\n  </li>\n</ol>\n<hr class=\"thin\" />\n<br/>\n<p>\n  <strong>페이지 컴포넌트에 적용된 쿼리문에 의해 가독성 저하</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">커스텀 훅을 작성하여 분리</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>각 페이지에 필요한 정적 데이터들은 기본적으로 페이지 컴포넌트에서만 쿼리문을 작성하여 불러올 수 있음 (<code class=\"language--text\">Gatsby</code> 프레임워크의 특징)</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span><code class=\"language--text\">Gatsby</code>의 <code class=\"language--text\">useStaticQuery</code>를 활용한 커스텀 훅을 작성하여 쿼리문을 분리한 후 필요한 곳에서만 불러옴</span>\n    </p>\n  </li>\n</ol>\n<hr class=\"thin\" />","frontmatter":{"title":"","summary":null,"date":null,"categories":null,"options":{"isPortfolio":true,"hide":true},"thumbnail":null}}}]}},"pageContext":{"slug":"/_portfolio/project-portpolio/"}},
    "staticQueryHashes": ["1642645631","2183628444","3590156278","363963755","3949884163","77750267","884297919"]}