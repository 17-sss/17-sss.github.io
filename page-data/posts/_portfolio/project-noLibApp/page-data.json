{"componentChunkName":"component---src-pages-custom-post-tsx","path":"/posts/_portfolio/project-noLibApp/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"8c487801-5d58-501b-b91a-387393632533","fields":{"slug":"/_portfolio/project-noLibApp/"},"html":"<h4 class=\"bg--gray text--bold\"> 🧚🏻&nbsp;&nbsp;구현 요약</h4>\n<ul>\n<li><code class=\"language-text\">HTML</code>, <code class=\"language-text\">CSS</code>, <code class=\"language-text\">JS</code> 와 <code class=\"language-text\">Webpack</code> 을 활용하여 <strong>Single Page Application</strong>를 제작합니다.</li>\n<li>상태 변경에 따라 렌더링하는 HTML 요소들도 업데이트 할 수 있도록 DIFF 알고리즘을 활용하였습니다.</li>\n<li>많은 이벤트가 등록되는 현상을 피하기 위해 이벤트 델리게이션 기법을 활용하였습니다.</li>\n<li>로컬 스토리지를 활용하여 새로고침이 되어도 현재 작성하고 있는 정보들이 유지되도록 하였습니다.</li>\n</ul>\n<h4 class=\"bg--gray text--bold\">🤔&nbsp;&nbsp;고민한 점</h4>\n<p>\n  <strong>컴포넌트의 템플릿(HTML 요소들)을 원하는 타깃 요소에 렌더링</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">id 선택자 적용, 고유 컴포넌트 id 생성</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span\n        ><strong>컴포넌트</strong>에서 추가적으로 생성하는 <strong class=\"text--brown\">자식 컴포넌트</strong>의 템플릿이\n        <strong>컴포넌트</strong>가 생성된 타깃 요소에 렌더링 됨</span\n      >\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span\n        ><strong>컴포넌트</strong>가 렌더링하는 템플릿 내의 HTML 요소 중\n        <strong class=\"text--brown\">자식 컴포넌트</strong>를 렌더링 하고자 하는 요소의 id 선택자를 전달.</span\n      >\n    </p>\n    <hr class=\"thin\" />\n  </li>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>같은 컴포넌트가 다수 생성될 시에 적용된 id 선택자의 정보들이 <strong>중복</strong>됨.</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span>컴포넌트 자체에 <u>고유 컴포넌트 id</u>를 <strong>생성</strong>함으로써 해결</span>\n    </p>\n    <ul class=\"pl--24 alpha\">\n      <li>\n        <span>고유 컴포넌트 id 정보를 기반으로 데이터를 추가, 수정, 삭제 시 원활한 동작을 가능하게 함.</span>\n      </li>\n    </ul>\n  </li>\n</ol>\n<hr class=\"thin\" />\n<br/>\n<p>\n  <strong>컴포넌트 상태 변경에 따라 렌더링되는 HTML 요소들 업데이트</strong>\n  <span>⇒</span>\n  <span class=\"text--italic text--bold text--gray\">DIFF 알고리즘 활용</span>\n</p>\n<hr class=\"thin\" />\n<ol>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>상태 변경이 감지되었을 때, 컴포넌트가 렌더링하는 요소들도 업데이트 되어야 함</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span>상태 변경 시 컴포넌트의 HTML 요소들을 렌더링하는 메소드를 실행하도록 변경</span>\n    </p>\n    <hr class=\"thin\" />\n  </li>\n  <li>\n    <p>\n      <code class=\"language--text text--brown text--bold\">문제</code>\n      <span>컴포넌트의 템플릿의 요소들은 변경된 상태에 따라 내용이 업데이트 되어야 함.</span>\n    </p>\n    <p>\n      <code class=\"language--text text--purple text--bold\">해결</code>\n      <span class=\"bg--green text--italic\">👇 <strong>내용 참고</strong></span>\n    </p>\n    <ul class=\"pl--24 alpha\">\n      <li>\n        <span>컴포넌트가 생성 되어있는 요소(타깃 요소)의 <strong>자식 요소</strong>들의 정보를 가져옴</span>\n      </li>\n      <li>\n        <span>컴포넌트가 렌더링하는 템플릿(HTML 요소들)을 변경된 상태 데이터를 기반으로 재생성 </span>\n      </li>\n      <li>\n        <span><strong>타깃 요소의 자식 요소들</strong> 중에서 재생성한 컴포넌트의 템플릿의 내용이 들어갈 곳을 찾음</span>\n      </li>\n      <li>\n        <span>들어갈 곳을 찾은 후 <strong>세부적으로 비교</strong>한 뒤 내용 업데이트 (추가 / 제거 여부, 속성, 텍스트 등)</span>\n      </li>\n    </ul>\n  </li>\n</ol>\n<hr class=\"thin\" />","frontmatter":{"title":"","summary":null,"date":null,"categories":null,"options":{"isPortfolio":true,"hide":true},"thumbnail":null}}}]}},"pageContext":{"slug":"/_portfolio/project-noLibApp/"}},"staticQueryHashes":["1642645631","2183628444","3590156278","363963755","3949884163","77750267","884297919"]}