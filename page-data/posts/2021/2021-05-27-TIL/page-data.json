{
    "componentChunkName": "component---src-pages-custom-post-tsx",
    "path": "/posts/2021/2021-05-27-TIL/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"0b39604a-e229-5a2a-b883-bb6cc60bcd01","fields":{"slug":"/2021/2021-05-27-TIL/"},"html":"<h2>🚀 Today I Learned (2021.05.27)</h2>\n<br/>\n<h3><strong>👨‍💻 오늘의 알고리즘</strong></h3>\n<ul>\n<li><a href=\"https://17-sss.github.io/2021-05-27-Implement_strStr(),_Rotate_String\" target=\"_blank\" rel=\"nofollow\">[Algorithm] LeetCode : Implement strStr(), Rotate String</a></li>\n</ul>\n<br/>\n<h3><strong>😆 오늘 뭐했어?</strong></h3>\n<ul>\n<li>\n<p>난 항상 <code class=\"language-text\">styled-components</code> 쓸 때</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> Modal <span class=\"token keyword\">from</span> <span class=\"token string\">'./Modal'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/* .. 생략 .. */</span>\n<span class=\"token keyword\">const</span> MainModal <span class=\"token operator\">=</span> <span class=\"token function\">styled</span><span class=\"token punctuation\">(</span>Modal<span class=\"token punctuation\">)</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n    display: flex;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위처럼 <code class=\"language-text\">Modal</code>을 상속받은 <code class=\"language-text\">MainModal</code>이 MainModal내에서 정의된 스타일들이 적용이 안되었었다.<br>\n그래서 나는 항상 <code class=\"language-text\">styled-components</code>의 <code class=\"language-text\">css</code>라는 기능을 사용해 스타일을 다시 만들어서 가져와 적용하거나<br>\n스타일드 컴포넌트 자체를 새로 만들었었다.(아주 비효율적이지..)</p>\n<p>왜 안되는건지 페어분에게 여쭤봤는데<br>\n페어분이 확인한 결과,<br>\n알고보니 내가 만든 <code class=\"language-text\">Modal</code>에 <code class=\"language-text\">{...props}</code>가 전달이 되어있지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Modal</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>props <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ModalLayout</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ModalLayout</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>이렇게 정의 해놨어야하는데..</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Modal</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> children <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ModalLayout</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">ModalLayout</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>이렇게 해버린..😱</li>\n<li>이렇게하면 왜 안되는건지 여쭤봤더니, 이 <code class=\"language-text\">Modal</code>을 상속받은 자식에게서<br>\n정의해준 스타일도 props로 들어가기 때문이라 한다!!</li>\n</ul>\n<blockquote>\n<p>이렇게 하나를 알아가니 너무 좋고, 제발 질문 좀 하자.<br>\n나는 왜 항상 질문도 안하다가 이지경까지..<br>\n이 이슈 같은 경우에도 몇 달을 해결안하고 썼던건지.. ㅎ</p>\n</blockquote>\n</li>\n<li>\n<p><code class=\"language-text\">styled-components</code>의 <code class=\"language-text\">css</code>로 생성한 스타일을 import 받아와서 적용하는 것. 애용하지말자.<br>\n그리 좋진 않은가봐..</p>\n</li>\n</ul>\n<br/>\n<h3><strong>✍️ 회고</strong></h3>\n<ul>\n<li>역시 다들 힘들고, 내가 맞는 방법을 쓰고 있는건 역시 아니었다.<br>\n이번에는 뭔가 많이 배워가는 것 같다!<br>\n항상 피드백을 제대로 받아본 적이 없었는데<br>\n너무 좋은 것 같다!<br>\n아 그리고 프로젝트에 연연하지말자.<br>\n어차피 이걸로 어디에 낼 곳도 없어..</li>\n</ul>","frontmatter":{"title":"[TIL] 2021-05-27","summary":null,"date":"2021.05.27.","categories":["TIL"],"options":{"isPortfolio":null,"hide":true},"thumbnail":null}}}]}},"pageContext":{"slug":"/2021/2021-05-27-TIL/"}},
    "staticQueryHashes": ["1413268446","1479751003","1642645631","3590156278","3949884163","77750267","884297919"]}