{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/posts/2021/2021-06-22-TIL/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>🚀 Today I Learned (2021.06.22)</h2>\n<br/>\n<h3><strong>👨‍💻 오늘의 알고리즘</strong></h3>\n<ul>\n<li><a href=\"https://17-sss.github.io/2021-06-22-Minimum_Area_Rectangle\" target=\"_blank\" rel=\"nofollow\">[Algorithm] LeetCode : Minimum Area Rectangle</a></li>\n</ul>\n<br/>\n<h3><strong>😆 오늘 뭐했어?</strong></h3>\n<ul>\n<li>\n<p>오늘은 진짜 많은 코딩을 했던 하루.<br>\n항상 리팩토링만하고 맴돌다가<br>\n이번에는 기능구현이 먼저라서 열시미 코딩.</p>\n</li>\n<li>\n<p>API를 적용하는데 POSTMAN mock 데이터를 적용했었는데<br>\n1000건 제한에 걸려서 데이터를 가져오지 못했었다.<br>\n알고보니 Team workspace면 제한이 있고<br>\n개인 계정이면 제한이 없다고 하신다!</p>\n<ul>\n<li>이제는 배포된 API를 적용하겠지만<br>\n나중에 쓸일이 생긴다면 자세히 알아보자!</li>\n</ul>\n</li>\n<li>\n<p>그리고 이번 프로젝트에선 <code class=\"language-text\">fetch API</code>를 통해 서버와 통신할 때<br>\nOAuth 로그인 후 반환되는 JWT Token (JSON Web Token)을 Header에서 Authorization의 값으로 입력을 해줬어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'http://API 주소'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n        headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'Content-Type'</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">,</span>\n            Authorization<span class=\"token operator\">:</span> <span class=\"token string\">'Bearer jwtToken값'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 이번 플젝에선 JWT Token 앞에는 Bearer가 들어감</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">data</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이것을 몰라서 서버꺼졌나..? 이러고 있었고<br>\n모르면 물어보고 소통해보자 제발!! 부끄러운거 아니니까!</p>\n</li>\n<li>\n<p>오늘 체크박스 기능도 필터 기능도 일부 완성했으니까, 다행인거야!<br>\n그러니까 이번 플젝.. 그리 부담가지지말자</p>\n</li>\n</ul>\n<br/>\n<h3><strong>✍️ 회고</strong></h3>\n<ul>\n<li>오늘은 열심히 코딩을 했던 하루<br>\n그리고 저녁엔 알고리즘<br>\n오늘도 고생했다 😁<br>\n그리고 모르는건 부끄러운게 아니다<br>\n모르면 물어보거나 검색해보자!!<br>\n(내가 백엔드 온전하게 한 게 아니잖아? 거의 기미상궁이었지..)</li>\n<li>그리고 PR 리뷰가 달렸는데, 타입스크립트는 기본을 넘어섰다고 피드백이 왔다.<br>\n오랜만에 기부니가 좋넴..ㅎㅎ</li>\n</ul>","frontmatter":{"title":"[TIL] 2021-06-22","summary":null,"date":"2021.06.22.","categories":["TIL"],"options":null,"thumbnail":null}}}]}},"pageContext":{"slug":"/2021/2021-06-22-TIL/"}},
    "staticQueryHashes": []}