{
    "componentChunkName": "component---src-templates-post-template-tsx",
    "path": "/2021-10-03-TIL/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h2>🚀 TIL : Weekly Report (10월 1주차 / 2021.10.03)</h2>\n<p>이번주는 대체적으로 HiFi 작업을 많이했던 것 같다.<br>\n지금까지 구성되었던 디렉토리 구조들이 옳지 않다는 판단이 들었고<br>\n이에 대해 리팩토링하고, 처음으로 media query를 사용해봤다.<br>\n처음에는 <code class=\"language-text\">window.innerWidth</code>가 변경될 때를 감지해서 컴포넌트의 크기나 디자인을<br>\n수정해주는 방향을 생각했는데, 현재 <code class=\"language-text\">window.innerWidth</code>를 체크하는 커스텀 훅을<br>\n만든다는 것 자체가 과연 맞는가? 라는 의문이 들었다.<br>\n그 이유는 css엔 media query라는 것도 있고, 이렇게 매번 resize 이벤트로 체크를 하면서<br>\n많은 이벤트를 발생시키는 건 비효율적이라고 생각했기 때문이다.</p>\n<br/>\n<p>그래서 노션에 둘의 차이점을 비교하고 내 동료분들의 예시들을 참고해가며<br>\n메모를 한 끝에, media query를 사용하는 방법을 택했고,<br>\n현 프로젝트에서는 styled components를 통한 스타일 작업을 하고 있는데,<br>\nstyled component를 작성하면서 media query를 생성하는 생성기가 있으면 괜찮을 것 같아서<br>\nmedia query를 string으로 반환하는 함수를 만들었다.<br>\n테스트 해본 결과 잘 되었었고,<br>\n다시 한번 styled components의 내부는 string 형식이라는 걸 알게 되었다.<br>\n(내부적으로 es6의 <code class=\"language-text\">Tagged Template Literal</code>을 사용하고 있다)</p>\n<p>다시 한번 생각해보기 위해 검색하고 실습!<br>\n<a href=\"https://john015.netlify.app/styled-components%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EB%8F%99%EC%9E%91%ED%95%A0%EA%B9%8C\" target=\"_blank\" rel=\"nofollow\">styled-components는 어떻게 동작할까?</a>를 보고</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">styled</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>arg</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">[</span>str<span class=\"token punctuation\">,</span> arg<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> styled<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  background-color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> primary <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>primary <span class=\"token operator\">?</span> <span class=\"token string\">'white'</span> <span class=\"token operator\">:</span> primaryColor<span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  padding: 1rem;\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>결과는?\n<br/>\n<img src=\"https://user-images.githubusercontent.com/33610315/136112264-1f38e539-4850-4a54-af85-bd6c908c2b96.png\"><br/></p>\n<ul>\n<li>다시봐도 신기.. (여기는 주간 회고니까 나중에 노션이나 블로그에 한번 정리해보자!)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<p>이번주는 코드보다는 서칭하고 연구하는데 시간을 들였던 것 같다.<br>\n요즘 드는 생각이 있다.<br>\n계속 개발일지를 노션에 쓰고있는데, 하다가 알게 되거나 고민하고 있는 사항을<br>\n검색해보고 기술 글을 쓰면 어떨까?<br>\n블로그에는 꼭 기술글만을 써야하나? 이러한 생각도 들고<br>\n이번주에는 대체적으로 메모를 하며 알게 된 것도 있어서 뜻 깊었던 한 주였던 것 같다.<br>\n다음주는 면접이 잡혀있는데, 면접에 최선을 다해보자!</p>","frontmatter":{"title":"[TIL] 2021-10-03","summary":null,"date":"2021.10.03.","categories":["TIL"],"options":null,"thumbnail":null}}}]}},"pageContext":{"slug":"/2021-10-03-TIL/"}},
    "staticQueryHashes": []}